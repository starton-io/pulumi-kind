name: release
on:
  push:
    tags:
      - v*.*.*
env:
  # THIS GITHUB_TOKEN IS A REQUIREMENT TO BE ABLE TO WRITE TO GH RELEASES
  GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
  # IF YOU NEED TO PUBLISH A NPM PACKAGE THEN ENSURE A NPM_TOKEN SECRET IS SET
  # AND PUBLISH_NPM: TRUE. IF YOU WANT TO PUBLISH TO A PRIVATE NPM REGISTRY
  # THEN ENSURE THE NPM_REGISTRY_URL IS CHANGED
  #NODE_AUTH_TOKEN: ${{ }}
  NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  PUBLISH_NPM: true
  NPM_REGISTRY_URL: https://registry.npmjs.org
  # IF YOU NEED TO PUBLISH A NUGET PACKAGE THEN ENSURE AN NUGET_PUBLISH_KEY
  # SECRET IS SET AND PUBLISH_NUGET: TRUE. IF YOU WANT TO PUBLISH TO AN ALTERNATIVE
  # NPM REGISTRY THEN ENSURE THE NPM_REGISTRY_URL IS CHANGED
  #NUGET_PUBLISH_KEY: ${{ YOUR NUGET PUBLISH KEY HERE }}
  #NUGET_FEED_URL: https://api.nuget.org/v3/index.json
  #PUBLISH_NUGET: true
  # IF YOU NEED TO PUBLISH A PYPI PACKAGE THEN ENSURE AN PYPI_API_TOKEN
  # SECRET IS SET AND PUBLISH_PYPI: TRUE. IF YOU WANT TO PUBLISH TO AN ALTERNATIVE
  # PYPI REGISTRY THEN ENSURE THE PYPI_REPOSITORY_URL IS SET. IF YOU ARE USING AN API_TOKEN THEN
  # YOU DO NOT NEED TO CHANGE THE PYPI_USERNAME (__token__) , IF YOU ARE USING PASSWORD AUTHENTICATION THEN YOU WILL
  # NEED TO CHANGE TO USE THE CORRECT PASSWORD
  #PYPI_PASSWORD: ${{ YOUR PYPI PASSWORD HERE }}
  #PYPI_USERNAME: "YOUR PYPI USERNAME HERE"
  #PYPI_REPOSITORY_URL: ""
  #PUBLISH_PYPI: true
jobs:
  publish_binary:
    name: publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags --force
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.goversion}}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.5.0
      with:
        repo: pulumi/pulumictl
    - name: Set PreRelease Version
      run: echo "GORELEASER_CURRENT_TAG=v$(pulumictl get version --language generic)" >> $GITHUB_ENV
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        args: -p 3 release --rm-dist
        version: latest
    strategy:
      fail-fast: true
      matrix:
        goversion:
        - 1.19.x
  publish_sdk:
    name: Publish SDKs
    runs-on: ubuntu-latest
    needs: publish_binary
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags --force
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.goversion }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.5.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2.0.0
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.nodeversion}}
          registry-url: ${{env.NPM_REGISTRY_URL}}
      - name: Build SDK
        run: make build_${{ matrix.language }}
     # Remove comment when stabilize the destination of the npm registry
     # - name: Check worktree clean
     #   run: |
     #     git update-index -q --refresh
     #     if ! git diff-files --quiet; then
     #         >&2 echo "error: working tree is not clean, aborting!"
     #         git status
     #         git diff
     #         exit 1
     #     fi
      - if: ${{ matrix.language == 'nodejs' && env.PUBLISH_NPM == 'true' }}
        uses: JS-DevTools/npm-publish@v1
        with:
          access: "public"
          token: ${{ env.NPM_TOKEN }}
          package: ${{github.workspace}}/sdk/nodejs/bin/package.json
    strategy:
      fail-fast: true
      matrix:
        goversion:
          - 1.19.x
        language:
          - nodejs
        nodeversion:
          - 18.x
